# Unified Application Configuration
# This file works for both local development and Docker environments

# Server Configuration
server.port=8080

# Database Configuration
# Use environment variable for database path, fallback to local path
spring.datasource.url=${DATABASE_URL:jdbc:sqlite:survey.db?mode=rwc}
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.jpa.database-platform=org.hibernate.community.dialect.SQLiteDialect
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true

# SQLite specific configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.community.dialect.SQLiteDialect
spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# SQLite ID generation strategy
spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20

# SQLite specific settings
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Initialize schema from SQL file (only for local development)
spring.sql.init.mode=${SQL_INIT_MODE:always}
spring.sql.init.schema-locations=classpath:schema.sql
spring.jpa.defer-datasource-initialization=${DEFER_DATASOURCE_INIT:true}

# Security Configuration
jwt.secret=${JWT_SECRET:your-secret-key-here-make-it-long-and-secure-in-production}
jwt.expiration=${JWT_EXPIRATION:86400000}

# CORS Configuration
# Use environment variable for CORS origins, fallback to localhost for development
spring.web.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*

# Logging Configuration
# Use environment variables for log levels, with sensible defaults
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.com.survey=${LOG_LEVEL_SURVEY:INFO}
logging.level.com.survey.controller=${LOG_LEVEL_CONTROLLER:INFO}
logging.level.com.survey.service=${LOG_LEVEL_SERVICE:INFO}
logging.level.com.survey.repository=${LOG_LEVEL_REPOSITORY:INFO}
logging.level.com.survey.security=${LOG_LEVEL_SECURITY:INFO}
logging.level.com.survey.config=${LOG_LEVEL_CONFIG:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SPRING_SECURITY:WARN}
logging.level.org.springframework.web=${LOG_LEVEL_SPRING_WEB:INFO}
logging.level.org.springframework.data=${LOG_LEVEL_SPRING_DATA:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_HIBERNATE:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOG_LEVEL_HIBERNATE_BINDER:WARN}
logging.level.org.hibernate.orm.jdbc.bind=${LOG_LEVEL_HIBERNATE_BINDER:WARN}

# Logging pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Logging file configuration (for debugging)
logging.file.name=${LOG_FILE_PATH:/app/backend/logs/survey-app.log}
logging.file.max-size=${LOG_FILE_MAX_SIZE:10MB}
logging.file.max-history=${LOG_FILE_MAX_HISTORY:7}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=${HEALTH_SHOW_DETAILS:when-authorized}

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# Allow circular references (temporary fix)
spring.main.allow-circular-references=true

# Performance optimizations
spring.jpa.open-in-view=${JPA_OPEN_IN_VIEW:false}
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Profile-specific configurations
# These will be overridden by profile-specific properties files if they exist
# but we keep them here as defaults 